const path = require('path')
const { SecretsManagerClient, GetSecretValueCommand } = require('@aws-sdk/client-secrets-manager')
const config = require('./config')

// Create a Secrets Manager client
const secretsManagerClient = new SecretsManagerClient({
  region: process.env.AWS_REGION || 'us-east-1',
  maxAttempts: 3, // optional: number of times to retry failed requests
  timeout: 5000, // optional: request timeout in milliseconds
})

// Fetch the secret value
async function injectSecrets(secretName) {
  jsonLog('info', 'loading secrets from aws secrets manager')
  try {
    const command = new GetSecretValueCommand({ SecretId: secretName })
    const response = await secretsManagerClient.send(command)
    const secretString = response.SecretString
    if (secretString && secretString.startsWith('{')) {
      const secretJson = JSON.parse(secretString)
      Object.assign(process.env, secretJson)
      jsonLog('info', 'secrets loaded')
    } else {
      jsonLog('error', "either secretString is empty or secretString does not start with '{'")
    }
  } catch (err) {
    console.error('Error while fetching secrets', err)
  }
}

function jsonLog(level, message) {
  const obj = { level, timestamp: new Date().toISOString(), message }
  console.log(JSON.stringify(obj))
}

async function entrypoint() {
  try {
    for (const secretName of config.secretsNames()) {
      await injectSecrets(secretName)
    }
  } catch (error) {
    console.error('entrypoint error', error)
  }
}

module.exports = { entrypoint, injectSecrets }
